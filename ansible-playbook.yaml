---
- name: Provisioning a new EC2 instance and security group
  hosts: localhost
  connection: local
  gather_facts: False
  tags: provisioning

  pre_tasks:

    - name: Gather facts
      setup:

    - name: Print python version
      debug:
        msg: "Using Python {{ ansible_python_version }}"

    - name: Install dependencies
      shell: "/usr/bin/python3.10 -m pip install {{ item }}"
      loop:
       - boto3
       - botocore

  vars:
    ansible_python_interpreter: /usr/bin/python3.10
    keypair: SSH-Key1.pem                                     # Set key pair
    instance_type: t2.micro
    image_id: ami-0f5ee92e2d63afc18
    wait: yes
    group: webserver
    count: 1
    region: eu-west-3
    security_group: dev-sg
    tag_name:
      Name: My-EC2                                        

  tasks:
    - name: Create a security group
      amazon.aws.ec2_group:
        name: "{{ security_group }}"
        description: Security Group for webserver Servers
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 8080
            to_port: 8080
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 3000
            to_port: 3000
            cidr_ip: 0.0.0.0/0  
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0   
      register: basic_firewall

    - name: Launch the new EC2 Instance
      amazon.aws.ec2_instance:
        security_group: "{{ security_group }}"
        instance_type: "{{ instance_type }}"
        image_id: "{{ image_id }}"
        wait: "{{ wait }}"
        region: "{{ region }}"
        key_name: "{{ keypair }}"
        count: "{{ count }}"
        tags: "{{ tag_name }}"
        user_data: |
          #!/bin/bash
          sudo apt update -y
          sudo apt install docker.io -y
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo docker run -d --name 2048 -p 3000:3000 sevenajay/2048:latest
      register: ec2